name: Integration tests

on:
  push:
    tags:
      - "cloudflow_contrib_it_v*"

env:
  #   DELETE TWO LINES BELOW
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  GOOGLE_PROJECT_NAME: ${{ secrets.GOOGLE_PROJECT_NAME }}
  PROJECT_ID: ${{ secrets.CLOUDFLOW_GKE_PROJECT }}
  GKE_REGION: europe-west1
  GKE_ZONE: europe-west1-b
  MACHINE_ID: "cicon"
  CLOUDFLOW_URL: "https://github.com/lightbend/cloudflow-contrib.git"
  JAVA_OPTS: -Xms2048M -Xmx4096M -Xss2M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8

jobs:
  gke:
    name: Run Cloudflow-contrib Integration tests
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: 'Set version'
        env:
          VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo "${VERSION}" | sed "s/cloudflow_contrib_it_v//" > .version
          cat .version

      - name: Set up JDK 11
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11.0-9

      - name: Cache Coursier cache
        uses: coursier/cache-action@v5

      # Latest tagged version uses a deprecated github actions feature that is going to be removed on 16th nov
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@15dc2ebff158fa77e9b28e43515bae5f990345b4
        with:
          version: '290.0.1'
          service_account_key: ${{ secrets.CLOUDFLOW_GKE_SA_KEY }}
          project_id: ${{ secrets.CLOUDFLOW_GKE_PROJECT }}

      - name: Setup the cluster
        shell: bash {0}
        run: |
          sudo snap install helm --classic
          sudo snap install kubectl --classic
          
          sudo snap install yq --classic
          sudo snap install jq --classic

          export VERSION=$(cat .version)

          gcloud config set compute/region ${GKE_REGION}
          gcloud config set compute/zone ${GKE_ZONE}

          gcloud container clusters get-credentials ${CLUSTER_NAME} --zone europe-west1-b --project ${GOOGLE_PROJECT_NAME} 
          gcloud --quiet auth configure-docker
          git clone ${CLOUDFLOW_URL} --branch v${VERSION} --depth 1 --single-branch ./cloudflow-contrib
      #   DELETE THREE LINES ABOVE
      #     export VERSION=$(cat .version)
      #     git clone ${CLOUDFLOW_URL} --branch v${VERSION} --depth 1 --single-branch ./cloudflow-contrib
      #     cat cloudflow-contrib/project/Dependencies.scala | grep 'val cloudflowVersion' | awk '{ print $4}' > .cloudflow-version
      #     cat .cloudflow-version
      #     export CLOUDFLOW_VERSION=$(cat .cloudflow-version)

      #     cd cloudflow-contrib
      #     cd cloudflow-it
      #     make spawn-gke-cluster version=${CLOUDFLOW_VERSION}

      #     gcloud --quiet auth configure-docker
      #     make prepare-cluster version=${CLOUDFLOW_VERSION}

      - name: Cache locally cloudflow-contrib to avoid sonatype delays
        run: |
          export VERSION=$(cat .version)
          cd cloudflow-contrib

          echo "ThisBuild / version := \"$VERSION\"" > version.sbt
          sbt 'set ThisBuild / publishMavenStyle := false' +publishLocal

      - name: Prepare swiss-knife
        env:
          DOCKER_REGISTRY: "eu.gcr.io"
          DOCKER_REPOSITORY: ${{ secrets.CLOUDFLOW_GKE_PROJECT }}
        run: |
          export VERSION=$(cat .version)
          cd cloudflow-contrib
          cd cloudflow-it
          make prepare-swiss-knife version=${VERSION}

      - name: Prepare clis
        run: |
          export VERSION=$(cat .version)
          cd cloudflow-contrib
          cd cloudflow-it
          make prepare-clis version=${VERSION}

      - name: Integration test
        env:
          DOCKER_REGISTRY: "eu.gcr.io"
          DOCKER_REPOSITORY: ${{ secrets.CLOUDFLOW_GKE_PROJECT }}
        run: |
          export VERSION=$(cat .version)
          
          cd cloudflow-contrib
          cd cloudflow-it
          make run-it-tests version=${VERSION}

      # - name: Cleanup the environment
      #   if: ${{ always() }}
      #   shell: bash {0}
      #   run: |
      #     export VERSION=$(cat .version)
      #     (cd cloudflow-contrib/cloudflow-it && make delete-gke-cluster version=${VERSION})
